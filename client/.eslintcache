[{"/Users/kakao_ent/kubernetes-mysql/kube-mysql-console/client/src/index.js":"1","/Users/kakao_ent/kubernetes-mysql/kube-mysql-console/client/src/reportWebVitals.js":"2","/Users/kakao_ent/kubernetes-mysql/kube-mysql-console/client/src/components/ConsoleApp.js":"3","/Users/kakao_ent/kubernetes-mysql/kube-mysql-console/client/src/store/configureStore.js":"4","/Users/kakao_ent/kubernetes-mysql/kube-mysql-console/client/src/pages/MainPage.js":"5","/Users/kakao_ent/kubernetes-mysql/kube-mysql-console/client/src/reducers/resources.js":"6","/Users/kakao_ent/kubernetes-mysql/kube-mysql-console/client/src/pages/CustomResourceInfo.js":"7","/Users/kakao_ent/kubernetes-mysql/kube-mysql-console/client/src/pages/DetailsPage.js":"8","/Users/kakao_ent/kubernetes-mysql/kube-mysql-console/client/src/types.js":"9","/Users/kakao_ent/kubernetes-mysql/kube-mysql-console/client/src/components/navigation/Navigation.js":"10","/Users/kakao_ent/kubernetes-mysql/kube-mysql-console/client/src/components/header/Header.js":"11","/Users/kakao_ent/kubernetes-mysql/kube-mysql-console/client/src/components/BackupTable.js":"12","/Users/kakao_ent/kubernetes-mysql/kube-mysql-console/client/src/components/ResourceTable.js":"13","/Users/kakao_ent/kubernetes-mysql/kube-mysql-console/client/src/components/InstancesetTable.js":"14","/Users/kakao_ent/kubernetes-mysql/kube-mysql-console/client/src/components/HaconfigTable.js":"15","/Users/kakao_ent/kubernetes-mysql/kube-mysql-console/client/src/components/InstanceTable.js":"16","/Users/kakao_ent/kubernetes-mysql/kube-mysql-console/client/src/pages/InstancesetDetailsTable.js":"17"},{"size":896,"mtime":1606095994041,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1605835000477,"results":"20","hashOfConfig":"19"},{"size":284,"mtime":1606112947979,"results":"21","hashOfConfig":"19"},{"size":178,"mtime":1606093463275,"results":"22","hashOfConfig":"19"},{"size":1844,"mtime":1607589295450,"results":"23","hashOfConfig":"19"},{"size":1294,"mtime":1606703501491,"results":"24","hashOfConfig":"19"},{"size":4363,"mtime":1607410510302,"results":"25","hashOfConfig":"19"},{"size":2685,"mtime":1607670357928,"results":"26","hashOfConfig":"19"},{"size":241,"mtime":1606093262956,"results":"27","hashOfConfig":"19"},{"size":7723,"mtime":1607435755801,"results":"28","hashOfConfig":"19"},{"size":3448,"mtime":1607272714686,"results":"29","hashOfConfig":"19"},{"size":13428,"mtime":1606805202569,"results":"30","hashOfConfig":"19"},{"size":14436,"mtime":1607271571323,"results":"31","hashOfConfig":"19"},{"size":13636,"mtime":1607397385411,"results":"32","hashOfConfig":"19"},{"size":13705,"mtime":1606807008114,"results":"33","hashOfConfig":"19"},{"size":13429,"mtime":1606805363569,"results":"34","hashOfConfig":"19"},{"size":21357,"mtime":1607704690584,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"188efv",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"39"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"39"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"39"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/kakao_ent/kubernetes-mysql/kube-mysql-console/client/src/index.js",["76"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ConsoleApp from './components/ConsoleApp';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {applyMiddleware, createStore} from \"redux\";\n\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport {rootReducer} from \"./store/configureStore\";\n\nconst store = createStore(rootReducer, composeWithDevTools(\n    // applyMiddleware(...middleware),\n));\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <ConsoleApp />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["77","78"],"/Users/kakao_ent/kubernetes-mysql/kube-mysql-console/client/src/reportWebVitals.js",[],"/Users/kakao_ent/kubernetes-mysql/kube-mysql-console/client/src/components/ConsoleApp.js",[],"/Users/kakao_ent/kubernetes-mysql/kube-mysql-console/client/src/store/configureStore.js",[],"/Users/kakao_ent/kubernetes-mysql/kube-mysql-console/client/src/pages/MainPage.js",["79","80","81","82","83","84","85","86"],"/Users/kakao_ent/kubernetes-mysql/kube-mysql-console/client/src/reducers/resources.js",[],"/Users/kakao_ent/kubernetes-mysql/kube-mysql-console/client/src/pages/CustomResourceInfo.js",["87","88","89","90","91","92","93","94","95","96","97","98","99"],"import Paper from \"@material-ui/core/Paper\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport React, { useState, useEffect} from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport {Typography} from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {ArgumentAxis, BarSeries, Chart, LineSeries, ValueAxis} from \"@devexpress/dx-react-chart-material-ui\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport styled from \"styled-components\";\nimport ResourceTable from \"../components/ResourceTable\";\nimport BackupTable from \"../components/BackupTable\";\nimport HaconfigTable from \"../components/HaconfigTable\";\nimport InstanceTable from \"../components/InstanceTable\";\nimport InstancesetTable from \"../components/InstancesetTable\";\nimport axios from 'axios';\n\n\nconst customresources = {\n    \"TotalInstanceset\": \"InstanceSet\",\n    \"TotalInstance\": \"Instances\",\n    \"TotalBackup\": \"Backup\",\n    \"TotalLocalPVSize\": \"Total Local PV Size\",\n\n}\n\nconst Abnormalsources = {\n    \"AbnormalLocalPV\": \"Abnormal Local PV\",\n    \"AbnormalInstance\": \"Abnormal Instance\",\n    \"AbnormalBackup\": \"Abnoraml Backup\",\n    \"RunningBackup\": \"Running Backup\"\n}\n\n\nconst StyledCardContent = styled(CardContent)`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-contents: center;\n`;\n\n\nconst generatedata = (n) => {\n    const ret = [];\n    let y = 0;\n    for (let i = 0; i < n; i += 1) {\n        y += Math.round(Math.random() * 10 - 5);\n        ret.push({ x: i, y });\n    }\n    return ret;\n};\n\nconst test_data = generatedata(100)\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        // marginTop: \"10em\",\n        marginBottom: \"2em\",\n        marginRight: \"2em\",\n        // marginLeft: \"8em\",\n        border: \"1px solid black\",\n        width: \"20em\",\n    },\n    container: {\n        width: \"100%\",\n        paddingLeft: \"20em\",\n        // paddingTop: \"10em\",\n        paddingRight: \"0px\",\n        // position: \"static\",\n        display: \"flex\",\n        // flexDirection: \"column\",\n        // marginRight: \"6em\"\n    },\n\n    resourceTable: {\n        width: \"12em\",\n        // marginRight: \"2em\"\n    },\n    usage: {\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-around\"\n    }\n}))\n\n\n\nfunction CustomResourceInfo() {\n\n    const classes = useStyles();\n\n    const [ datas, setDatas ] = useState([])\n\n    useEffect(()=>{\n        const getData = async () => {\n            try {\n                const response = await axios.get(\"http://localhost:8080/all\")\n                console.log(response)\n                setDatas(response.data)\n            } catch(e){\n                console.log(e);\n            }\n        }\n        getData()\n    },[])\n\n    return <>\n            <Container className={classes.container} maxWidth={false}\n                style={{\n                    paddingTop: \"10em\"\n                }}\n            >\n\n            {\n                Object.entries(customresources).map((e, index)=>{\n                    return <Card className={classes.card} key={e}>\n                        <StyledCardContent>\n                            <Typography variant={\"h6\"}>\n                                {e[1]}\n                            </Typography>\n                            <Typography variant={\"h5\"}>\n                                {datas[e[0]]}\n                            </Typography>\n                        </StyledCardContent>\n                    </Card>\n                })\n            }\n            </Container>\n            <Container className={classes.container} maxWidth={false}\n            >\n\n                {\n                    Object.entries(Abnormalsources).map((e, index)=>{\n                        return <Card className={classes.card} key={e}>\n                            <StyledCardContent>\n                                <Typography variant={\"h6\"}>\n                                    {e[1]}\n                                </Typography>\n                                <Typography variant={\"h5\"}>\n                                    {datas[e[0]]}\n                                </Typography>\n                            </StyledCardContent>\n                        </Card>\n                    })\n                }\n            </Container>\n\n        </>\n\n}\n\nexport default CustomResourceInfo;","/Users/kakao_ent/kubernetes-mysql/kube-mysql-console/client/src/pages/DetailsPage.js",[],"/Users/kakao_ent/kubernetes-mysql/kube-mysql-console/client/src/types.js",[],"/Users/kakao_ent/kubernetes-mysql/kube-mysql-console/client/src/components/navigation/Navigation.js",["100","101"],"import React from \"react\";\nimport Drawer from \"@material-ui/core/Drawer\";\n// import styled from 'styled-components';\nimport {Toolbar} from \"@material-ui/core\";\nimport Container from \"@material-ui/core/Container\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\n\nimport styled from \"styled-components\";\n\n\nimport NamespaceSVG from './cluster/ns.svg';\nimport NodeSVG from './cluster/node.svg';\nimport PersistentVolumeSVG from './cluster/pv.svg';\nimport RoleSVG from './cluster/role.svg';\nimport StorageClassSVG from './cluster/sc.svg';\n\nimport CronJobSVG from './workLoad/cronjob.svg';\nimport DaemonSetSVG from './workLoad/ds.svg';\nimport DeploymentSVG from './workLoad/deploy.svg';\nimport JobSVG from './workLoad/job.svg';\nimport PodSVG from './workLoad/pod.svg';\nimport ReplicaSetSVG from './workLoad/rs.svg';\nimport ReplicaControllerSVG from './workLoad/rs.svg';\nimport StatefulSetSVG from './workLoad/sts.svg';\n\nimport IngressSVG from './discoveryandloadbalancing/ing.svg';\nimport ServiceSVG from './discoveryandloadbalancing/svc.svg';\n\nimport ConfigMap from './settingsandstorage/cm.svg';\nimport PersistentVolumeClaimSVG from './settingsandstorage/pvc.svg';\nimport SecretSVG from './settingsandstorage/secret.svg';\n\nimport CustomResourceSVG from './customResource/crd.svg';\n// import Box from \"@material-ui/core/Box\";\n// import Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\nconst clusterImages = [\n    NamespaceSVG, NodeSVG, PersistentVolumeSVG, RoleSVG, StorageClassSVG,\n];\n\nconst workLoadImages = [\n    CronJobSVG, DaemonSetSVG, DeploymentSVG, JobSVG, PodSVG, ReplicaSetSVG, ReplicaControllerSVG,\n    StatefulSetSVG\n]\n\nconst discoveryandloadbalancingImages = [\n    IngressSVG, ServiceSVG\n];\n\nconst settingandstorageImages = [\n    ConfigMap, PersistentVolumeClaimSVG, SecretSVG\n];\n\nconst customResourcesImages = [\n    CustomResourceSVG, CustomResourceSVG, CustomResourceSVG, CustomResourceSVG\n];\n\nconst iconImages = [\n    clusterImages, workLoadImages, discoveryandloadbalancingImages, settingandstorageImages, customResourcesImages\n]\n\nconst MiddleTopicName = [\n    'Status','클러스터', '워크로드','디스커버리 및 로드 밸런싱', '설정 및 스토리지', '커스텀 리소스'\n];\n\nconst TitleSet = [\n\n];\n\nconst cluster = [\n    \"네임스페이스\", \"노드\", \"퍼시스턴트 볼륨\", \"롤\", \"스토리지 클래스\"\n];\n\nconst workLoad = [\n    \"크론 잡\", \"데몬 셋\", \"디플로이먼트\", \"잡\", \"파드(Pod)\",\n    \"레플리카 셋\", \"레플리케이션 컨트롤러\", \"스테이트풀 셋\"\n];\n\nconst disCoveryAndLoadBalancing = [\n    \"인그레스\", \"서비스\"\n];\n\nconst settingAndStorage = [\n    \"컨피그 맵\", \"퍼시스턴트 볼륨 클레임\", \"시크릿\"\n];\n\nconst customresource = [\n    'Instanceset', 'Instances', \"haconfigs\", \"backup\"\n];\n\n// function onClickTest () {\n//     console.log(\"test\");\n// }\n\nconst StyledButton = styled(Button)`\n    width: 100%;\n`;\n\n\n\n\nfunction navigation(prop) {\n\n    const { setBreadcrumb, navopen } = prop;\n\n    const changeHeader = (item, text) => {\n        console.log(item, text)\n        setBreadcrumb(`${item},${text}`);\n    };\n\n\n    return (\n        <React.Fragment>\n            {\n                navopen === false ? <></> :\n                    <Drawer\n                        variant={\"permanent\"}\n                        anchor={\"left\"}\n                        position={\"fixed\"}\n                        PaperProps={{\n                            style: {\n                                // marginTop: \"4em\"\n                                paddingTop: \"5em\",\n                                paddingLeft: \"0em\",\n                                paddingRight: \"0em\"\n                            }\n                        }}\n                    >\n                        <Toolbar/>\n                        <Container style={{\n                            paddingLeft: \"0em\",\n                            paddingRight: \"0em\"\n                        }}>\n                            <Divider />\n                            <Typography>\n                                <StyledButton>\n                                    {MiddleTopicName[0]}\n                                </StyledButton>\n                            </Typography>\n                            {\n                                [cluster, workLoad, disCoveryAndLoadBalancing, settingAndStorage, customresource]\n                                    .map((item, indexIcon)=>{\n\n                                        return <React.Fragment key={indexIcon}>\n                                            <Divider />\n                                            <Typography>\n                                                <StyledButton onClick={() => changeHeader(MiddleTopicName[indexIcon+1], \"DashBoard\")}>\n                                                    {MiddleTopicName[indexIcon+1]}\n                                                </StyledButton>\n                                            </Typography>\n                                            {\n                                                <List style={{\n                                                    paddingLeft: \"0em\",\n                                                    paddingRight: \"0em\",\n                                                    paddingTop: \"0em\",\n                                                    paddingBottom: \"0em\"\n                                                }}>\n                                                    {\n                                                        item.map((text, index) => {\n                                                            return <React.Fragment key={index}>\n                                                                <ListItem key={text} style={{\n                                                                    paddingLeft: \"0em\", paddingRight: \"0em\",\n                                                                    paddingTop: \"0em\", paddingBottom: \"0em\"\n                                                                }}>\n\n                                                                    <StyledButton onClick={() => changeHeader(MiddleTopicName[indexIcon+1], text)}>\n                                                                        <ListItemIcon>\n                                                                            <img src={iconImages[indexIcon][index]}/>\n                                                                        </ListItemIcon>\n                                                                        <ListItemText primary={\n                                                                            text\n                                                                        }/>\n                                                                    </StyledButton>\n\n                                                                </ListItem>\n                                                            </React.Fragment>\n\n                                                        })\n                                                    }\n                                                </List>\n                                            }\n                                        </React.Fragment>\n                                    })\n                            }\n                        </Container>\n                    </Drawer>\n            }\n\n    </React.Fragment>\n    );\n}\n\nexport default navigation;","/Users/kakao_ent/kubernetes-mysql/kube-mysql-console/client/src/components/header/Header.js",["102","103","104","105"],"\nimport styled from \"styled-components\";\nimport React from 'react';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport {Toolbar} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Input from \"@material-ui/core/Input\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport Link from \"@material-ui/core/Link\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\n\n\n// const StyledBox = styled(Box)`\n//     margin: 0 auto;\n// `;\n//\n// const StyledContainer = styled(Container)`\n//     background-color: skyblue;\n//     margin-left: 0px;\n//     margin-right: 0px;\n//\n// `;\n//\n\nconst handleClick = () => {\n    return \"Hello World\"\n}\n\nconst StyledAppBar = styled(AppBar)`\n    background-color: #6778e5;\n`;\n\nconst StyledToolbar = styled(Toolbar)`\n    background-color: white;\n`;\n\nfunction Header(prop) {\n\n    const { breadcrumb, isnavopen, navopen  } = prop;\n    const breadcrumbs = breadcrumb.split(\",\");\n\n    const handleNavOpen = () => {\n        isnavopen(!navopen)\n    }\n    return <Paper>\n                <StyledAppBar\n                position={\"fixed\"}\n                style={{\n                position: \"fixed\",\n                zIndex: 1201\n                }}\n                >\n                <StyledToolbar>\n                <IconButton>\n                </IconButton>\n                <Typography variant=\"h6\" style={{ flex: 0.4, color: \"black\" }}>\n                KM Console\n                </Typography>\n                <form style={{ flex: 0.5 }}>\n                <Input placeholder=\"resource\" inputProps={{ 'aria-label': 'description' }}></Input>\n                </form>\n                <Button style={{ flex: 0.1 }}>\n                Login\n                </Button>\n                </StyledToolbar>\n\n                <Toolbar style={{ display: \"flex\"}}>\n                <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\"  style={{ display: \"block\" }}\n                            onClick={handleNavOpen} >\n                    <MenuIcon />\n                </IconButton>\n                <Breadcrumbs aria-label={\"breadcrumb\"}>\n                {\n                    breadcrumbs.map((item, index) => {\n                        return <Link color=\"inherit\" key={index}>\n                            {item}\n                        </Link>\n                    })\n                }\n                {/*<Link color={\"inherit\"}>Test</Link>*/}\n                {/*<Link color=\"inherit\" >*/}\n                {/*    Core*/}\n                {/*</Link>*/}\n                {/*<Typography color=\"textPrimary\">Breadcrumb</Typography>*/}\n                </Breadcrumbs>\n                </Toolbar>\n\n                </StyledAppBar>\n\n                {/*    <Toolbar>*/}\n                {/*        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">*/}\n                {/*            <MenuIcon />*/}\n                {/*        </IconButton>*/}\n\n                {/*        <Breadcrumbs aria-label={\"breadcrumb\"}>*/}\n                {/*            <Link color={\"inherit\"} href={\"/\"} ></Link>*/}\n                {/*        </Breadcrumbs>*/}\n                {/*    </Toolbar>*/}\n\n                </Paper>\n\n\n}\n\nexport default Header;\n","/Users/kakao_ent/kubernetes-mysql/kube-mysql-console/client/src/components/BackupTable.js",[],"/Users/kakao_ent/kubernetes-mysql/kube-mysql-console/client/src/components/ResourceTable.js",[],"/Users/kakao_ent/kubernetes-mysql/kube-mysql-console/client/src/components/InstancesetTable.js",["106"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport axios from 'axios';\n\n\nfunction createData(namespace, name, Replicas, Age) {\n    // callData();\n    return { namespace, name, Replicas, Age};\n}\n\nasync function callData(){\n\n    const data = await axios.get(\"http://localhost:8080/all\")\n    console.log(data)\n}\n\nconst rows = [\n    createData('Cupcake', 305, 3.7, 67),\n    // createData('Donut', 452, 25.0, 51),\n    // createData('Eclair', 262, 16.0, 24),\n    // createData('Frozen yoghurt', 159, 6.0, 24),\n    // createData('Gingerbread', 356, 16.0, 49),\n    // createData('Honeycomb', 408, 3.2, 87),\n    // createData('Ice cream sandwich', 237, 9.0, 37),\n    // createData('Jelly Bean', 375, 0.0, 94),\n    // createData('KitKat', 518, 26.0, 65),\n    // createData('Lollipop', 392, 0.2, 98),\n    // createData('Marshmallow', 318, 0, 81),\n    // createData('Nougat', 360, 19.0, 9),\n    // createData('Oreo', 437, 18.0, 63),\n];\n\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction getComparator(order, orderBy) {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n    { id: 'namespace', numeric: false, disablePadding: true, label: 'NameSpace' },\n    { id: 'name', numeric: true, disablePadding: false, label: 'Name' },\n    { id: 'Replicas', numeric: true, disablePadding: false, label: 'Replicas  (개수)' },\n    { id: 'Age', numeric: true, disablePadding: false, label: 'Age (s)' },\n    // { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n    const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                <TableCell padding=\"checkbox\">\n                    <Checkbox\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\n                        checked={rowCount > 0 && numSelected === rowCount}\n                        onChange={onSelectAllClick}\n                        inputProps={{ 'aria-label': 'select all instanceset' }}\n                    />\n                </TableCell>\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? 'right' : 'left'}\n                        padding={headCell.disablePadding ? 'none' : 'default'}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nEnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n    root: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    highlight:\n        theme.palette.type === 'light'\n            ? {\n                color: theme.palette.secondary.main,\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n            }\n            : {\n                color: theme.palette.text.primary,\n                backgroundColor: theme.palette.secondary.dark,\n            },\n    title: {\n        flex: '1 1 100%',\n    },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n    const classes = useToolbarStyles();\n    const { numSelected } = props;\n\n    return (\n        <Toolbar\n            className={clsx(classes.root, {\n                [classes.highlight]: numSelected > 0,\n            })}\n        >\n            {numSelected > 0 ? (\n                <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n                    {numSelected} selected\n                </Typography>\n            ) : (\n                <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n                    Instanceset\n                </Typography>\n            )}\n\n            {numSelected > 0 ? (\n                <Tooltip title=\"Delete\">\n                    <IconButton aria-label=\"delete\">\n                        <DeleteIcon />\n                    </IconButton>\n                </Tooltip>\n            ) : (\n                <Tooltip title=\"Filter list\">\n                    <IconButton aria-label=\"filter list\">\n                        <FilterListIcon />\n                    </IconButton>\n                </Tooltip>\n            )}\n        </Toolbar>\n    );\n};\n\nEnhancedTableToolbar.propTypes = {\n    numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '40%',\n        marginRight: '10%',\n        marginBottom: '1%'\n    },\n    paper: {\n        width: '100%',\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        // minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n}));\n\nexport default function InstancesetTable() {\n    const classes = useStyles();\n    const [order, setOrder] = React.useState('asc');\n    const [orderBy, setOrderBy] = React.useState('name');\n    const [selected, setSelected] = React.useState([]);\n    const [page, setPage] = React.useState(0);\n    const [dense, setDense] = React.useState(false);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = rows.map((n) => n.name);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1),\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const handleChangeDense = (event) => {\n        setDense(event.target.checked);\n    };\n\n    const isSelected = (name) => selected.indexOf(name) !== -1;\n\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <EnhancedTableToolbar numSelected={selected.length} />\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                        size={dense ? 'small' : 'medium'}\n                        aria-label=\"enhanced table\"\n                    >\n                        <EnhancedTableHead\n                            classes={classes}\n                            numSelected={selected.length}\n                            order={order}\n                            orderBy={orderBy}\n                            onSelectAllClick={handleSelectAllClick}\n                            onRequestSort={handleRequestSort}\n                            rowCount={rows.length}\n                        />\n                        <TableBody>\n                            {stableSort(rows, getComparator(order, orderBy))\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map((row, index) => {\n                                    const isItemSelected = isSelected(row.name);\n                                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                                    return (\n                                        <TableRow\n                                            hover\n                                            onClick={(event) => handleClick(event, row.name)}\n                                            role=\"checkbox\"\n                                            aria-checked={isItemSelected}\n                                            tabIndex={-1}\n                                            key={row.name}\n                                            selected={isItemSelected}\n                                        >\n                                            <TableCell padding=\"checkbox\">\n                                                <Checkbox\n                                                    checked={isItemSelected}\n                                                    inputProps={{ 'aria-labelledby': labelId }}\n                                                />\n                                            </TableCell>\n                                            <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                                                {row.namespace}\n                                            </TableCell>\n                                            <TableCell align=\"right\">{row.name}</TableCell>\n                                            <TableCell align=\"right\">{row.Replicas}</TableCell>\n                                            <TableCell align=\"right\">{row.Age}</TableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                            {emptyRows > 0 && (\n                                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                                    <TableCell colSpan={6} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 25]}\n                    component=\"div\"\n                    count={rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n            <FormControlLabel\n                control={<Switch checked={dense} onChange={handleChangeDense} />}\n                label=\"Dense padding\"\n            />\n        </div>\n    );\n}\n","/Users/kakao_ent/kubernetes-mysql/kube-mysql-console/client/src/components/HaconfigTable.js",[],"/Users/kakao_ent/kubernetes-mysql/kube-mysql-console/client/src/components/InstanceTable.js",[],"/Users/kakao_ent/kubernetes-mysql/kube-mysql-console/client/src/pages/InstancesetDetailsTable.js",["107","108","109","110","111","112","113","114","115"],{"ruleId":"116","severity":1,"message":"117","line":7,"column":9,"nodeType":"118","messageId":"119","endLine":7,"endColumn":24},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"116","severity":1,"message":"124","line":4,"column":8,"nodeType":"118","messageId":"119","endLine":4,"endColumn":13},{"ruleId":"116","severity":1,"message":"125","line":6,"column":8,"nodeType":"118","messageId":"119","endLine":6,"endColumn":11},{"ruleId":"116","severity":1,"message":"126","line":7,"column":9,"nodeType":"118","messageId":"119","endLine":7,"endColumn":13},{"ruleId":"116","severity":1,"message":"127","line":9,"column":8,"nodeType":"118","messageId":"119","endLine":9,"endColumn":15},{"ruleId":"116","severity":1,"message":"128","line":13,"column":7,"nodeType":"118","messageId":"119","endLine":13,"endColumn":24},{"ruleId":"116","severity":1,"message":"129","line":27,"column":11,"nodeType":"118","messageId":"119","endLine":27,"endColumn":18},{"ruleId":"116","severity":1,"message":"130","line":30,"column":12,"nodeType":"118","messageId":"119","endLine":30,"endColumn":18},{"ruleId":"116","severity":1,"message":"131","line":30,"column":20,"nodeType":"118","messageId":"119","endLine":30,"endColumn":28},{"ruleId":"116","severity":1,"message":"124","line":1,"column":8,"nodeType":"118","messageId":"119","endLine":1,"endColumn":13},{"ruleId":"116","severity":1,"message":"127","line":6,"column":8,"nodeType":"118","messageId":"119","endLine":6,"endColumn":15},{"ruleId":"116","severity":1,"message":"132","line":7,"column":9,"nodeType":"118","messageId":"119","endLine":7,"endColumn":21},{"ruleId":"116","severity":1,"message":"133","line":7,"column":23,"nodeType":"118","messageId":"119","endLine":7,"endColumn":32},{"ruleId":"116","severity":1,"message":"134","line":7,"column":34,"nodeType":"118","messageId":"119","endLine":7,"endColumn":39},{"ruleId":"116","severity":1,"message":"135","line":7,"column":41,"nodeType":"118","messageId":"119","endLine":7,"endColumn":51},{"ruleId":"116","severity":1,"message":"136","line":7,"column":53,"nodeType":"118","messageId":"119","endLine":7,"endColumn":62},{"ruleId":"116","severity":1,"message":"137","line":11,"column":8,"nodeType":"118","messageId":"119","endLine":11,"endColumn":21},{"ruleId":"116","severity":1,"message":"138","line":12,"column":8,"nodeType":"118","messageId":"119","endLine":12,"endColumn":19},{"ruleId":"116","severity":1,"message":"139","line":13,"column":8,"nodeType":"118","messageId":"119","endLine":13,"endColumn":21},{"ruleId":"116","severity":1,"message":"140","line":14,"column":8,"nodeType":"118","messageId":"119","endLine":14,"endColumn":21},{"ruleId":"116","severity":1,"message":"141","line":15,"column":8,"nodeType":"118","messageId":"119","endLine":15,"endColumn":24},{"ruleId":"116","severity":1,"message":"142","line":53,"column":7,"nodeType":"118","messageId":"119","endLine":53,"endColumn":16},{"ruleId":"116","severity":1,"message":"143","line":72,"column":7,"nodeType":"118","messageId":"119","endLine":72,"endColumn":15},{"ruleId":"144","severity":1,"message":"145","line":174,"column":77,"nodeType":"146","endLine":174,"endColumn":118},{"ruleId":"116","severity":1,"message":"127","line":9,"column":8,"nodeType":"118","messageId":"119","endLine":9,"endColumn":15},{"ruleId":"116","severity":1,"message":"147","line":10,"column":8,"nodeType":"118","messageId":"119","endLine":10,"endColumn":14},{"ruleId":"116","severity":1,"message":"125","line":15,"column":8,"nodeType":"118","messageId":"119","endLine":15,"endColumn":11},{"ruleId":"116","severity":1,"message":"148","line":31,"column":7,"nodeType":"118","messageId":"119","endLine":31,"endColumn":18},{"ruleId":"116","severity":1,"message":"149","line":31,"column":16,"nodeType":"118","messageId":"119","endLine":31,"endColumn":24},{"ruleId":"116","severity":1,"message":"150","line":1,"column":16,"nodeType":"118","messageId":"119","endLine":1,"endColumn":25},{"ruleId":"116","severity":1,"message":"151","line":19,"column":8,"nodeType":"118","messageId":"119","endLine":19,"endColumn":24},{"ruleId":"116","severity":1,"message":"152","line":20,"column":8,"nodeType":"118","messageId":"119","endLine":20,"endColumn":14},{"ruleId":"116","severity":1,"message":"153","line":57,"column":49,"nodeType":"118","messageId":"119","endLine":57,"endColumn":59},{"ruleId":"154","severity":1,"message":"155","line":65,"column":9,"nodeType":"156","messageId":"157","endLine":78,"endColumn":10},{"ruleId":"158","severity":1,"message":"159","line":80,"column":11,"nodeType":"160","messageId":"161","endLine":80,"endColumn":14},{"ruleId":"116","severity":1,"message":"162","line":286,"column":7,"nodeType":"118","messageId":"119","endLine":286,"endColumn":19},{"ruleId":"116","severity":1,"message":"163","line":297,"column":9,"nodeType":"118","messageId":"119","endLine":297,"endColumn":18},{"ruleId":"164","severity":1,"message":"165","line":490,"column":8,"nodeType":"166","endLine":490,"endColumn":19,"suggestions":"167"},"no-unused-vars","'applyMiddleware' is defined but never used.","Identifier","unusedVar","no-native-reassign",["168"],"no-negated-in-lhs",["169"],"'Paper' is defined but never used.","'Box' is defined but never used.","'Grid' is defined but never used.","'Divider' is defined but never used.","'ContainerFragment' is assigned a value but never used.","'classes' is assigned a value but never used.","'change' is assigned a value but never used.","'onchange' is assigned a value but never used.","'ArgumentAxis' is defined but never used.","'BarSeries' is defined but never used.","'Chart' is defined but never used.","'LineSeries' is defined but never used.","'ValueAxis' is defined but never used.","'ResourceTable' is defined but never used.","'BackupTable' is defined but never used.","'HaconfigTable' is defined but never used.","'InstanceTable' is defined but never used.","'InstancesetTable' is defined but never used.","'test_data' is assigned a value but never used.","'TitleSet' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Drawer' is defined but never used.","'handleClick' is assigned a value but never used.","'callData' is defined but never used.","'useEffect' is defined but never used.","'FormControlLabel' is defined but never used.","'Switch' is defined but never used.","'generation' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'useRowStyles' is assigned a value but never used.","'namespace' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'rows'. Either include it or remove the dependency array.","ArrayExpression",["170"],"no-global-assign","no-unsafe-negation",{"desc":"171","fix":"172"},"Update the dependencies array to be: [namespace, rows]",{"range":"173","text":"174"},[18693,18704],"[namespace, rows]"]